Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED25-Oct-23     18:17:57     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optsize -noreduceopt -nopadbranch
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\timer.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    ;    1	/*
                           A     9    ;    2	 * Title:			AGON MOS - Timer
                           A    10    ;    3	 * Author:			Dean Belfield
                           A    11    ;    4	 * Created:			19/06/2022
                           A    12    ;    5	 * Last Updated:	08/04/2023
                           A    13    ;    6	 * 
                           A    14    ;    7	 * Modinfo:
                           A    15    ;    8	 * 11/07/2022:		Removed unused func
                           A    16    ;    9	 * 24/07/2022:		Moved interrupt han
                           A    17    ;   10	 * 13/03/2023:		Refactored
                           A    18    ;   11	 * 31/03/2023:		Added wait_VDP
                           A    19    ;   12	 * 08/04/2023:		Fixed timing loop i
                           A    20    ;   13	 */
                           A    21    ;   14	
                           A    22    ;   15	#include <eZ80.h>
                           A    23    ;   16	#include <defines.h>
                           A    24    ;   17	
                           A    25    ;   18	#include "timer.h"
                           A    26    ;   19	
                           A    27    ;   20	// Configure Timer 0
                           A    28    ;   21	// Parameters:
                           A    29    ;   22	// - interval: Interval in ms
                           A    30    ;   23	// - clkdiv: 4, 16, 64 or 256
                           A    31    ;   24	// - clkflag: Other clock flags (interr
                           A    32    ;   25	// Returns:
                           A    33    ;   26	// - interval value
                           A    34    ;   27	//
                           A    35    ;   28	unsigned short init_timer0(int interval
044087                     A    36    _init_timer0:
                           A    37    .DEFINE "_init_timer0"
                           A    38    
                           A    39    .VALUE _init_timer0
                           A    40    
                           A    41    .CLASS 2
                           A    42    
                           A    43    .TYPE 77
                           A    44    
                           A    45    .ENDEF
                           A    46    
                           A    47    .BEGFUNC "init_timer0",28,"_init_timer0"
                           A    48    
                           A    49    .LINE 28
                           A    50    
                           A    51    .DEFINE "interval"
                           A    52    
                           A    53    .CLASS 65
                           A    54    
                           A    55    .VALUE 6
                           A    56    
                           A    57    .TYPE 4
                           A    58    
                           A    59    .ENDEF
                           A    60    
                           A    61    .DEFINE "clkdiv"
                           A    62    
                           A    63    .CLASS 65
                           A    64    
                           A    65    .VALUE 9
                           A    66    
                           A    67    .TYPE 4
                           A    68    
                           A    69    .ENDEF
                           A    70    
                           A    71    .DEFINE "ctrlbits"
                           A    72    
                           A    73    .CLASS 65
                           A    74    
                           A    75    .VALUE 12
                           A    76    
                           A    77    .TYPE 12
                           A    78    
                           A    79    .ENDEF
                           A    80    
                           A    81    .DEFINE "clkbits"
                           A    82    
                           A    83    .CLASS 65
                           A    84    
                           A    85    .VALUE -1
                           A    86    
                           A    87    .TYPE 12
                           A    88    
                           A    89    .ENDEF
                           A    90    
                           A    91    .DEFINE "rr"
                           A    92    
                           A    93    .CLASS 65
                           A    94    
                           A    95    .VALUE -3
                           A    96    
                           A    97    .TYPE 13
                           A    98    
                           A    99    .ENDEF
                           A   100    
                           A   101    .DEFINE "ctl"
                           A   102    
                           A   103    .CLASS 65
                           A   104    
                           A   105    .VALUE -4
                           A   106    
                           A   107    .TYPE 12
                           A   108    
                           A   109    .ENDEF
                           A   110    
044087 DDE5                A   111    	PUSH	IX
044089 DD210000 00         A   112    	LD	IX,0
04408E DD39                A   113    	ADD	IX,SP
044090 C5                  A   114    	PUSH	BC
044091 3B                  A   115    	DEC	SP
                           A   116    ;   29		unsigned short	rr;
                           A   117    ;   30		unsigned char	clkbits = 0;
                           A   118    .LINE 30
                           A   119    
044092 DD36FF00            A   120    	LD	(IX+%FFFFFFFF),%0
                           A   121    ;   31		unsigned char	ctl;
                           A   122    ;   32	
                           A   123    ;   33		switch(clkdiv) {
                           A   124    .LINE 33
                           A   125    
044096 DD2709              A   126    	LD	HL,(IX+%9)
044099 CD 5A 43 04         A   127    	CALL	__case16D
04409D E9                  A   128    	JP	(HL)
04409E                     A   129    L__0:
04409E 0300                A   130    	DW	3
0440A0 1000                A   131    	DW	16
0440A2 B24004              A   132    	DW24	L_0	
                           A   133    
0440A5 4000                A   134    	DW	64
0440A7 B84004              A   135    	DW24	L_1	
                           A   136    
0440AA 0001                A   137    	DW	256
0440AC BE4004              A   138    	DW24	L_2	
                           A   139    
0440AF C24004              A   140    	DW24	L_3	
                           A   141    
                           A   142    ;   34			case  16: clkbits = 0x04; break
0440B2                     A   143    L_0:
                           A   144    .LINE 34
                           A   145    
0440B2 DD36FF04            A   146    	LD	(IX+%FFFFFFFF),%4
0440B6 18 0A               A   147    	JR	L_3
                           A   148    ;   35			case  64: clkbits = 0x08; break
0440B8                     A   149    L_1:
                           A   150    .LINE 35
                           A   151    
0440B8 DD36FF08            A   152    	LD	(IX+%FFFFFFFF),%8
0440BC 18 04               A   153    	JR	L_3
                           A   154    ;   36			case 256: clkbits = 0x0C; break
0440BE                     A   155    L_2:
                           A   156    .LINE 36
                           A   157    
0440BE DD36FF0C            A   158    	LD	(IX+%FFFFFFFF),%C
                           A   159    ;   37		}
0440C2                     A   160    L_3:
                           A   161    .LINE 37
                           A   162    
                           A   163    ;   38		ctl = (ctrlbits | clkbits);
                           A   164    .LINE 38
                           A   165    
0440C2 DD7E0C              A   166    	LD	A,(IX+%C)
0440C5 DDB6FF              A   167    	OR	A,(IX+%FFFFFFFF)
0440C8 DD77FC              A   168    	LD	(IX+%FFFFFFFC),A
                           A   169    ;   39	
                           A   170    ;   40		rr = (unsigned short)((SysClkFreq /
                           A   171    .LINE 40
                           A   172    
0440CB DD0709              A   173    	LD	BC,(IX+%9)
0440CE CD 62 45 04         A   174    	CALL	__itol
0440D2 2100D002            A   175    	LD	HL,184320
0440D6 1E00                A   176    	LD	E,%0
0440D8 CD AD 43 04         A   177    	CALL	__ldivs
0440DC E5C1                A   178    	LD	BC,HL
0440DE DD2706              A   179    	LD	HL,(IX+%6)
0440E1 CD 80 46 04         A   180    	CALL	__smulu
0440E5 DD75FD              A   181    	LD	(IX+%FFFFFFFD),L
0440E8 DD74FE              A   182    	LD	(IX+%FFFFFFFE),H
                           A   183    ;   41	
                           A   184    ;   42		TMR0_CTL = 0x00;					
                           A   185    .LINE 42
                           A   186    
0440EB AF                  A   187    	XOR	A,A
0440EC ED3980              A   188    	OUT0	(128),A
                           A   189    ;   43		TMR0_RR_L = (unsigned char)(rr);
                           A   190    .LINE 43
                           A   191    
0440EF DD7EFD              A   192    	LD	A,(IX+%FFFFFFFD)
0440F2 ED3981              A   193    	OUT0	(129),A
                           A   194    ;   44		TMR0_RR_H = (unsigned char)(rr >> 8
                           A   195    .LINE 44
                           A   196    
0440F5 DD07FD              A   197    	LD	BC,(IX+%FFFFFFFD)
0440F8 CD 54 43 04         A   198    	CALL	__stoiu
0440FC 3E08                A   199    	LD	A,%8
0440FE CD C4 42 04         A   200    	CALL	__ishrs_b
044102 7D                  A   201    	LD	A,L
044103 ED3982              A   202    	OUT0	(130),A
                           A   203    ;   45	    TMR0_CTL = ctl;
                           A   204    .LINE 45
                           A   205    
044106 DD7EFC              A   206    	LD	A,(IX+%FFFFFFFC)
044109 ED3980              A   207    	OUT0	(128),A
                           A   208    ;   46	
                           A   209    ;   47		return rr;
                           A   210    .LINE 47
                           A   211    
04410C DD27FD              A   212    	LD	HL,(IX+%FFFFFFFD)
                           A   213    ;   48	}
                           A   214    .LINE 48
                           A   215    
04410F DDF9                A   216    	LD	SP,IX
044111 DDE1                A   217    	POP	IX
044113 C9                  A   218    	RET	
                           A   219    
                           A   220    
                           A   221    ;**************************** _init_timer0 ****
                           A   222    ;Name                         Addr/Register   S
                           A   223    ;ctl                                   IX-4    
                           A   224    ;rr                                    IX-3    
                           A   225    ;clkbits                               IX-1    
                           A   226    ;ctrlbits                             IX+12    
                           A   227    ;clkdiv                                IX+9    
                           A   228    ;interval                              IX+6    
                           A   229    
                           A   230    
                           A   231    ; Stack Frame Size: 19 (bytes)
                           A   232    ;       Spill Code: 0 (instruction)
                           A   233    
                           A   234    
                           A   235    .ENDFUNC "init_timer0",48,"_init_timer0"
                           A   236    ;   49	
                           A   237    ;   50	// Enable Timer 0
                           A   238    ;   51	// Parameters:
                           A   239    ;   52	// - enable: 0 = disable, 1 = enable
                           A   240    ;   53	//
                           A   241    ;   54	void enable_timer0(unsigned char enable
044114                     A   242    _enable_timer0:
                           A   243    .DEFINE "_enable_timer0"
                           A   244    
                           A   245    .VALUE _enable_timer0
                           A   246    
                           A   247    .CLASS 2
                           A   248    
                           A   249    .TYPE 65
                           A   250    
                           A   251    .ENDEF
                           A   252    
                           A   253    .BEGFUNC "enable_timer0",54,"_enable_timer0"
                           A   254    
                           A   255    .LINE 54
                           A   256    
                           A   257    .DEFINE "enable"
                           A   258    
                           A   259    .CLASS 65
                           A   260    
                           A   261    .VALUE 6
                           A   262    
                           A   263    .TYPE 12
                           A   264    
                           A   265    .ENDEF
                           A   266    
                           A   267    .DEFINE "b"
                           A   268    
                           A   269    .CLASS 65
                           A   270    
                           A   271    .VALUE -1
                           A   272    
                           A   273    .TYPE 12
                           A   274    
                           A   275    .ENDEF
                           A   276    
044114 DDE5                A   277    	PUSH	IX
044116 DD210000 00         A   278    	LD	IX,0
04411B DD39                A   279    	ADD	IX,SP
04411D 3B                  A   280    	DEC	SP
                           A   281    ;   55		unsigned char b;
                           A   282    ;   56	
                           A   283    ;   57		if(enable <= 1) {
                           A   284    .LINE 57
                           A   285    
04411E 3E01                A   286    	LD	A,%1
044120 DDBE06              A   287    	CP	A,(IX+%6)
044123 38 19               A   288    	JR	C,L_6
                           A   289    ;   58			b = TMR0_CTL;
                           A   290    .LINE 58
                           A   291    
044125 ED3880              A   292    	IN0	A,(128)
044128 DD77FF              A   293    	LD	(IX+%FFFFFFFF),A
                           A   294    ;   59			b &= 0xFC;
                           A   295    .LINE 59
                           A   296    
04412B E6FC                A   297    	AND	A,%FC
04412D DD77FF              A   298    	LD	(IX+%FFFFFFFF),A
                           A   299    ;   60			b |= (enable | 2); 
                           A   300    .LINE 60
                           A   301    
044130 DD7E06              A   302    	LD	A,(IX+%6)
044133 CBCF                A   303    	SET	%1,A
044135 DDB6FF              A   304    	OR	A,(IX+%FFFFFFFF)
044138 DD77FF              A   305    	LD	(IX+%FFFFFFFF),A
                           A   306    ;   61			TMR0_CTL = b;	
                           A   307    .LINE 61
                           A   308    
04413B ED3980              A   309    	OUT0	(128),A
                           A   310    ;   62		}
                           A   311    ;   63	}
04413E                     A   312    L_6:
                           A   313    .LINE 63
                           A   314    
04413E DDF9                A   315    	LD	SP,IX
044140 DDE1                A   316    	POP	IX
044142 C9                  A   317    	RET	
                           A   318    
                           A   319    
                           A   320    ;**************************** _enable_timer0 **
                           A   321    ;Name                         Addr/Register   S
                           A   322    ;b                                     IX-1    
                           A   323    ;enable                                IX+6    
                           A   324    
                           A   325    
                           A   326    ; Stack Frame Size: 10 (bytes)
                           A   327    ;       Spill Code: 0 (instruction)
                           A   328    
                           A   329    
                           A   330    .ENDFUNC "enable_timer0",63,"_enable_timer0"
                           A   331    ;   64	
                           A   332    ;   65	// Get data count of Timer 0
                           A   333    ;   66	//
                           A   334    ;   67	unsigned short get_timer0() {
044143                     A   335    _get_timer0:
                           A   336    .DEFINE "_get_timer0"
                           A   337    
                           A   338    .VALUE _get_timer0
                           A   339    
                           A   340    .CLASS 2
                           A   341    
                           A   342    .TYPE 77
                           A   343    
                           A   344    .ENDEF
                           A   345    
                           A   346    .BEGFUNC "get_timer0",67,"_get_timer0"
                           A   347    
                           A   348    .LINE 67
                           A   349    
                           A   350    .DEFINE "l"
                           A   351    
                           A   352    .CLASS 65
                           A   353    
                           A   354    .VALUE -1
                           A   355    
                           A   356    .TYPE 12
                           A   357    
                           A   358    .ENDEF
                           A   359    
                           A   360    .DEFINE "h"
                           A   361    
                           A   362    .CLASS 65
                           A   363    
                           A   364    .VALUE -2
                           A   365    
                           A   366    .TYPE 12
                           A   367    
                           A   368    .ENDEF
                           A   369    
044143 DDE5                A   370    	PUSH	IX
044145 DD210000 00         A   371    	LD	IX,0
04414A DD39                A   372    	ADD	IX,SP
04414C 3B                  A   373    	DEC	SP
04414D 3B                  A   374    	DEC	SP
                           A   375    ;   68		unsigned char l = TMR0_DR_L;
                           A   376    .LINE 68
                           A   377    
04414E ED3881              A   378    	IN0	A,(129)
044151 DD77FF              A   379    	LD	(IX+%FFFFFFFF),A
                           A   380    ;   69		unsigned char h = TMR0_DR_H;
                           A   381    .LINE 69
                           A   382    
044154 ED3882              A   383    	IN0	A,(130)
044157 DD77FE              A   384    	LD	(IX+%FFFFFFFE),A
                           A   385    ;   70		return (h << 8) | l;
                           A   386    .LINE 70
                           A   387    
04415A DD4EFE              A   388    	LD	C,(IX+%FFFFFFFE)
04415D 0600                A   389    	LD	B,%0
04415F C5E1                A   390    	LD	HL,BC
044161 65                  A   391    	LD	H,L
044162 2E00                A   392    	LD	L,%0
044164 DD4EFF              A   393    	LD	C,(IX+%FFFFFFFF)
044167 CD 23 46 04         A   394    	CALL	__sor
                           A   395    ;   71	}
                           A   396    .LINE 71
                           A   397    
04416B DDF9                A   398    	LD	SP,IX
04416D DDE1                A   399    	POP	IX
04416F C9                  A   400    	RET	
                           A   401    
                           A   402    
                           A   403    ;**************************** _get_timer0 *****
                           A   404    ;Name                         Addr/Register   S
                           A   405    ;h                                     IX-2    
                           A   406    ;l                                     IX-1    
                           A   407    
                           A   408    
                           A   409    ; Stack Frame Size: 8 (bytes)
                           A   410    ;       Spill Code: 0 (instruction)
                           A   411    
                           A   412    
                           A   413    .ENDFUNC "get_timer0",71,"_get_timer0"
                           A   414    	XREF __ldivs:ROM
                           A   415    	XREF __sor:ROM
                           A   416    	XREF __smulu:ROM
                           A   417    	XREF __stoiu:ROM
                           A   418    	XREF __itol:ROM
                           A   419    	XREF __case16D:ROM
                           A   420    	XREF __ishrs_b:ROM
                           A   421    	XDEF _get_timer0
                           A   422    	XDEF _enable_timer0
                           A   423    	XDEF _init_timer0
                           A   424    	END


Errors: 0
Warnings: 0
Lines Assembled: 425

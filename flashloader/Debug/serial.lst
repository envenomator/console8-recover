Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED25-Oct-23     18:17:58     page:   1


PC     Object              I  Line    Source 
       000000D0            A     1    PORT			EQU	%D0			; UART1
                           A     2    				
       000000D0            A     3    REG_RBR:		EQU	PORT+0		; Receive buffe
       000000D0            A     4    REG_THR:		EQU	PORT+0		; Transmitter h
       000000D0            A     5    REG_DLL:		EQU	PORT+0		; Divisor latch
       000000D1            A     6    REG_IER:		EQU	PORT+1		; Interrupt ena
       000000D1            A     7    REG_DLH:		EQU	PORT+1		; Divisor latch
       000000D2            A     8    REG_IIR:		EQU	PORT+2		; Interrupt ide
       000000D2            A     9    REG_FCT			EQU	PORT+2;		; Flow control
       000000D3            A    10    REG_LCR:		EQU	PORT+3		; Line control
       000000D4            A    11    REG_MCR:		EQU	PORT+4		; Modem control
       000000D5            A    12    REG_LSR:		EQU	PORT+5		; Line status
       000000D6            A    13    REG_MSR:		EQU	PORT+6		; Modem status
                           A    14    
       000000D7            A    15    REG_SCR:		EQU PORT+7		; Scratch
                           A    16    
       00004000            A    17    TX_WAIT			EQU	16384 		; Count before 
                           A    18    
       00000080            A    19    UART_LSR_ERR	EQU %80			; Error
       00000040            A    20    UART_LSR_ETX	EQU %40			; Transmit empt
       00000020            A    21    UART_LSR_ETH	EQU	%20			; Transmit hold
       00000001            A    22    UART_LSR_RDY	EQU	%01			; Data ready
                           A    23    
                           A    24    
                           A    25    			.ASSUME	ADL = 1
                           A    26    			SEGMENT CODE
                           A    27    
                           A    28    			XDEF	_init_UART0
                           A    29    			;XDEF	_uart1_getch
                           A    30    			;XDEF	_uart1_putch
                           A    31    
                           B     0    			include "ez80F92.inc"			
                           B     1    ;**********************************************
                           B     2    ;*    eZ80F92.inc
                           B     3    ;*
                           B     4    ;*		eZ80F92 Registers
                           B     5    ;*
                           B     6    ;**********************************************
                           B     7    ;* Start eZ80F92 Include file
                           B     8    
                           B     9    ;* TIMER registers
                           B    10    
       00000080            B    11    TMR0_CTL:	.equ  %80
       00000081            B    12    TMR0_DR_L:	.equ  %81
       00000081            B    13    TMR0_RR_L:	.equ  %81
       00000082            B    14    TMR0_DR_H:	.equ  %82
       00000082            B    15    TMR0_RR_H:	.equ  %82
       00000083            B    16    TMR1_CTL:	.equ  %83
       00000084            B    17    TMR1_DR_L:	.equ  %84
       00000084            B    18    TMR1_RR_L:	.equ  %84
       00000085            B    19    TMR1_DR_H:	.equ  %85
       00000085            B    20    TMR1_RR_H:	.equ  %85
       00000086            B    21    TMR2_CTL:	.equ  %86
       00000087            B    22    TMR2_DR_L:	.equ  %87
       00000087            B    23    TMR2_RR_L:	.equ  %87
       00000088            B    24    TMR2_DR_H:	.equ  %88
       00000088            B    25    TMR2_RR_H:	.equ  %88
       00000089            B    26    TMR3_CTL:	.equ  %89
       0000008A            B    27    TMR3_DR_L:	.equ  %8a
       0000008A            B    28    TMR3_RR_L:	.equ  %8a
       0000008B            B    29    TMR3_DR_H:	.equ  %8b
       0000008B            B    30    TMR3_RR_H:	.equ  %8b
       0000008C            B    31    TMR4_CTL:	.equ  %8c
       0000008D            B    32    TMR4_DR_L:	.equ  %8d
       0000008D            B    33    TMR4_RR_L:	.equ  %8d
       0000008E            B    34    TMR4_DR_H:	.equ  %8e
       0000008E            B    35    TMR4_RR_H:	.equ  %8e
       0000008F            B    36    TMR5_CTL:	.equ  %8f
       00000090            B    37    TMR5_DR_L:	.equ  %90
       00000090            B    38    TMR5_RR_L:	.equ  %90
       00000091            B    39    TMR5_DR_H:	.equ  %91
       00000091            B    40    TMR5_RR_H:	.equ  %91
       00000092            B    41    TMR_ISS:	.equ  %92
                           B    42    
                           B    43    ;* WDT Registers
                           B    44    
       00000093            B    45    WDT_CTL:	.equ %93
       00000094            B    46    WDT_RR:	.equ  %94
                           B    47    
                           B    48    
                           B    49    ;* PORT Registers
                           B    50    
       0000009A            B    51    PB_DR:		.equ %9A
       0000009B            B    52    PB_DDR:		.equ %9B
       0000009C            B    53    PB_ALT1:	.equ %9C
       0000009D            B    54    PB_ALT2:	.equ %9D
       0000009E            B    55    PC_DR:		.equ %9E
       0000009F            B    56    PC_DDR:		.equ %9F
       000000A0            B    57    PC_ALT1:	.equ %A0
       000000A1            B    58    PC_ALT2:	.equ %A1
       000000A2            B    59    PD_DR:		.equ %A2
       000000A3            B    60    PD_DDR:		.equ %A3
       000000A4            B    61    PD_ALT1:	.equ %A4
       000000A5            B    62    PD_ALT2:	.equ %A5
                           B    63    
                           B    64    ;* Chip Select
       000000A8            B    65    CS0_LBR:	.equ %A8
       000000A9            B    66    CS0_UBR:	.equ %A9
       000000AA            B    67    CS0_CTL:	.equ %AA
       000000AB            B    68    CS1_LBR:	.equ %AB
       000000AC            B    69    CS1_UBR:	.equ %AC
       000000AD            B    70    CS1_CTL:	.equ %AD
       000000AE            B    71    CS2_LBR:	.equ %AE
       000000AF            B    72    CS2_UBR:	.equ %AF
       000000B0            B    73    CS2_CTL:	.equ %B0
       000000B1            B    74    CS3_LBR:	.equ %B1
       000000B2            B    75    CS3_UBR:	.equ %B2
       000000B3            B    76    CS3_CTL:	.equ %B3
                           B    77    
                           B    78    ;* RAMCTL Registers
       000000B4            B    79    RAM_CTL0:	.equ %B4
       000000B4            B    80    RAM_CTL:	.equ %B4
       000000B5            B    81    RAM_ADDR_U:	.equ %B5
                           B    82    
                           B    83    ;* SPI Registers
                           B    84    
       000000B8            B    85    SPI_BRG_L:	.equ %B8
       000000B9            B    86    SPI_BRG_H:	.equ %B9
       000000BA            B    87    SPI_CTL:	.equ %BA
       000000BB            B    88    SPI_SR:		.equ %BB
       000000BC            B    89    SPI_RBR:	.equ %BC
       000000BC            B    90    SPI_TSR:	.equ %BC
                           B    91    
                           B    92    ;* UART0 Registers
                           B    93    
       000000C0            B    94    UART0_RBR:	.equ  %C0
       000000C0            B    95    UART0_THR:	.equ  %C0
       000000C0            B    96    UART0_BRG_L:	.equ  %C0
       000000C1            B    97    UART0_IER:	.equ  %C1
       000000C1            B    98    UART0_BRG_H:	.equ  %C1
       000000C2            B    99    UART0_IIR:	.equ  %C2
       000000C2            B   100    UART0_FCTL:	.equ  %C2
       000000C3            B   101    UART0_LCTL:	.equ  %C3
       000000C4            B   102    UART0_MCTL:	.equ  %C4
       000000C5            B   103    UART0_LSR:	.equ  %C5
       000000C6            B   104    UART0_MSR:	.equ  %C6
       000000C7            B   105    UART0_SPR:	.equ  %C7
                           B   106    
                           B   107    ;* I2C Registers
                           B   108    
       000000C8            B   109    I2C_SAR:	.equ  %C8
       000000C9            B   110    I2C_XSAR:	.equ  %C9
       000000CA            B   111    I2C_DR:		.equ  %CA
       000000CB            B   112    I2C_CTL:	.equ  %CB
       000000CC            B   113    I2C_SR:		.equ  %CC
       000000CC            B   114    I2C_CCR:	.equ  %CC
       000000CD            B   115    I2C_SRR:	.equ  %CD
                           B   116    
                           B   117    ;* UART1 Registers
                           B   118    
       000000D0            B   119    UART1_RBR:	.equ  %D0
       000000D0            B   120    UART1_THR:	.equ  %D0
       000000D0            B   121    UART1_BRG_L:	.equ  %D0
       000000D1            B   122    UART1_IER:	.equ  %D1
       000000D1            B   123    UART1_BRG_H:	.equ  %D1
       000000D2            B   124    UART1_IIR:	.equ  %D2
       000000D2            B   125    UART1_FCTL:	.equ  %D2
       000000D3            B   126    UART1_LCTL:	.equ  %D3
       000000D4            B   127    UART1_MCTL:	.equ  %D4
       000000D5            B   128    UART1_LSR:	.equ  %D5
       000000D6            B   129    UART1_MSR:	.equ  %D6
       000000D7            B   130    UART1_SPR:	.equ  %D7
                           B   131    
                           B   132    ;* IR Registers
                           B   133    
       000000BF            B   134    IR_CTL:		.equ   %BF
                           B   135    
                           B   136    ;* CLK Registers
                           B   137    
       000000DB            B   138    CLK_PPD1:	.equ   %DB
       000000DC            B   139    CLK_PPD2:	.equ   %DC
                           B   140    
                           B   141    ;* RTC Registers
                           B   142    
       000000E0            B   143    RTC_SEC:	.equ  %E0
       000000E1            B   144    RTC_MIN:	.equ  %E1
       000000E2            B   145    RTC_HRS:	.equ  %E2
       000000E3            B   146    RTC_DOW:	.equ  %E3
       000000E4            B   147    RTC_DOM:	.equ  %E4
       000000E5            B   148    RTC_MON:	.equ  %E5
       000000E6            B   149    RTC_YR:		.equ  %E6
       000000E7            B   150    RTC_CEN:	.equ  %E7
       000000E8            B   151    RTC_ASEC:	.equ  %E8
       000000E9            B   152    RTC_AMIN:	.equ  %E9
       000000EA            B   153    RTC_AHRS:	.equ  %EA
       000000EB            B   154    RTC_ADOW:	.equ  %EB
       000000EC            B   155    RTC_ACTRL:	.equ  %EC
       000000ED            B   156    RTC_CTRL:	.equ  %ED
                           B   157    
                           B   158    ;* CSBMC Registers
                           B   159    
       000000F0            B   160    CS0_BMC:	.equ %F0
       000000F1            B   161    CS1_BMC:	.equ %F1
       000000F2            B   162    CS2_BMC:	.equ %F2
       000000F3            B   163    CS3_BMC:	.equ %F3
                           B   164    
                           B   165    ;* FLASH Registers
                           B   166    
       000000F5            B   167    FLASH_KEY:	.equ  %F5
       000000F6            B   168    FLASH_DATA:	.equ  %F6
       000000F7            B   169    FLASH_ADDR_U:	.equ  %F7
       000000F8            B   170    FLASH_CTRL:	.equ  %F8
       000000F9            B   171    FLASH_FDIV:	.equ  %F9
       000000FA            B   172    FLASH_PROT:	.equ  %FA
       000000FB            B   173    FLASH_IRQ:	.equ  %FB
       000000FC            B   174    FLASH_PAGE:	.equ  %FC
       000000FD            B   175    FLASH_ROW:	.equ  %FD
       000000FE            B   176    FLASH_COL:	.equ  %FE
       000000FF            B   177    FLASH_PGCTL:	.equ  %FF
                           B   178    
                           B   179    ;* End eZ80F92 inc file 
                           A    33    
       000000FF            A    34    PORTD_DRVAL_DEF       .equ    0ffh			;Th
       000000FF            A    35    PORTD_DDRVAL_DEF      .equ    0ffh			;Th
       000000FF            A    36    PORTD_ALT0VAL_DEF     .equ    0ffh			;Th
       00000000            A    37    PORTD_ALT1VAL_DEF     .equ    000h			;Th
       00000000            A    38    PORTD_ALT2VAL_DEF     .equ    000h			;Th
                           A    39    
                           A    40    ; baudrate divisors
                           A    41    ; 18432000 / 16*1152000 = 1,0
       00000001            A    42    BRD_LOW                .equ    001h
       00000000            A    43    BRD_HIGH               .equ    000h
                           A    44    
044025                     A    45    _init_UART0:
                           A    46        ; all pins to GPIO mode 2, high impedance i
044025 3EFF                A    47        ld a, PORTD_DRVAL_DEF
044027 ED39A2              A    48        out0 (PD_DR),a
04402A 3EFF                A    49        ld a, PORTD_DDRVAL_DEF
04402C ED39A3              A    50        out0 (PD_DDR),a
04402F 3E00                A    51        ld a, PORTD_ALT1VAL_DEF
044031 ED39A4              A    52        out0 (PD_ALT1),a
044034 3E00                A    53        ld a, PORTD_ALT2VAL_DEF
044036 ED39A5              A    54        out0 (PD_ALT2),a
                           A    55    
                           A    56        ; initialize for correct operation
                           A    57        ; pin 0 and 1 to alternate function
                           A    58        ; set pin 3 (CTS) to high-impedance input
044039 ED38A3              A    59        in0 a,(PD_DDR)
04403C F60B                A    60        or  00001011b; set pin 0,1,3
04403E ED39A3              A    61        out0 (PD_DDR), a
044041 ED38A4              A    62        in0 a,(PD_ALT1)
044044 E6F4                A    63        and 11110100b; reset pin 0,1,3
044046 ED39A4              A    64        out0 (PD_ALT1), a
044049 ED38A5              A    65        in0 a,(PD_ALT2)
04404C E6F7                A    66        and 11110111b; reset pin 3
04404E F603                A    67        or  00000011b; set pin 0,1
044050 ED39A5              A    68        out0 (PD_ALT2), a
                           A    69        
044053 ED38C3              A    70        in0 a,(UART0_LCTL)
044056 F680                A    71        or 10000000b ; set UART_LCTL_DLAB
044058 ED39C3              A    72        out0 (UART0_LCTL),a
04405B 3E01                A    73        ld a, BRD_LOW ;// Load divisor low
04405D ED39C0              A    74        out0 (UART0_BRG_L),a
044060 3E00                A    75        ld a, BRD_HIGH ;// Load divisor high
044062 ED39C1              A    76        out0 (UART0_BRG_H),a
044065 ED38C3              A    77        in0 a,(UART0_LCTL)
044068 E67F                A    78        and 01111111b ; reset UART_LCTL_DLAB
04406A ED39C3              A    79        out0 (UART0_LCTL),a
04406D 3E00                A    80        ld a, 000h  ; reset modem control register
04406F ED39C4              A    81        out0 (UART0_MCTL),a
044072 3E07                A    82        ld a, 007h  ; enable and clear hardware fif
044074 ED39C2              A    83        out0 (UART0_FCTL),a
044077 3E00                A    84        ld a, 000h  ; no interrupts
044079 ED39C1              A    85        out0 (UART0_IER),a
04407C ED38C3              A    86        in0 a, (UART0_LCTL)
04407F F603                A    87        or  00000011b    ; 8 databits, 1 stopbit
044081 E6F7                A    88        and 11110111b    ; no parity
044083 ED39C3              A    89        out0 (UART0_LCTL),a
044086 C9                  A    90    	ret


Errors: 0
Warnings: 0
Lines Assembled: 270
